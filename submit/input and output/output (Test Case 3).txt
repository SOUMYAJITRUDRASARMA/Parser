RAW READ LEX DEFINATIONS (STRING) -->
#Registered Tokens: 26

DELETE  -->  DELETE
INTO  -->  INTO
INSERT  -->  INSERT
>=  -->  >=
>  -->  >
=  -->  =
<=  -->  <=
<  -->  <
\)  -->  )
\(  -->  (
VALUES  -->  VALUES
\.  -->  .
;  -->  ;
BY  -->  BY
OR  -->  OR
SELECT  -->  SELECT
WHERE  -->  WHERE
GROUP  -->  GROUP
ORDER  -->  ORDER
HAVING  -->  HAVING
AND  -->  AND
FROM  -->  FROM
,  -->  ,
NOT  -->  NOT
\n+\t+   -->  SEP
(a+b+c+d+e+f+g+h+i+j+k+l+m+n+o+p+q+r+s+t+u+v+w+x+y+z)(1+2+3+4+5+6+7+8+9+0+a+b+c+d+e+f+g+h+i+j+k+l+m+n+o+p+q+r+s+t+u+v+w+x+y+z)*  -->  ID

___________________________________________________________________________

CONCAT PROCESSED LEX DEFINATIONS -->
#Registered Tokens: 26

[ {D , C} ,{. , O} ,{E , C} ,{. , O} ,{L , C} ,{. , O} ,{E , C} ,{. , O} ,{T , C} ,{. , O} ,{E , C} ]  -->  DELETE
[ {I , C} ,{. , O} ,{N , C} ,{. , O} ,{T , C} ,{. , O} ,{O , C} ]  -->  INTO
[ {I , C} ,{. , O} ,{N , C} ,{. , O} ,{S , C} ,{. , O} ,{E , C} ,{. , O} ,{R , C} ,{. , O} ,{T , C} ]  -->  INSERT
[ {> , C} ,{. , O} ,{= , C} ]  -->  >=
[ {> , C} ]  -->  >
[ {= , C} ]  -->  =
[ {< , C} ,{. , O} ,{= , C} ]  -->  <=
[ {< , C} ]  -->  <
[ {) , C} ]  -->  )
[ {( , C} ]  -->  (
[ {V , C} ,{. , O} ,{A , C} ,{. , O} ,{L , C} ,{. , O} ,{U , C} ,{. , O} ,{E , C} ,{. , O} ,{S , C} ]  -->  VALUES
[ {. , C} ]  -->  .
[ {; , C} ]  -->  ;
[ {B , C} ,{. , O} ,{Y , C} ]  -->  BY
[ {O , C} ,{. , O} ,{R , C} ]  -->  OR
[ {S , C} ,{. , O} ,{E , C} ,{. , O} ,{L , C} ,{. , O} ,{E , C} ,{. , O} ,{C , C} ,{. , O} ,{T , C} ]  -->  SELECT
[ {W , C} ,{. , O} ,{H , C} ,{. , O} ,{E , C} ,{. , O} ,{R , C} ,{. , O} ,{E , C} ]  -->  WHERE
[ {G , C} ,{. , O} ,{R , C} ,{. , O} ,{O , C} ,{. , O} ,{U , C} ,{. , O} ,{P , C} ]  -->  GROUP
[ {O , C} ,{. , O} ,{R , C} ,{. , O} ,{D , C} ,{. , O} ,{E , C} ,{. , O} ,{R , C} ]  -->  ORDER
[ {H , C} ,{. , O} ,{A , C} ,{. , O} ,{V , C} ,{. , O} ,{I , C} ,{. , O} ,{N , C} ,{. , O} ,{G , C} ]  -->  HAVING
[ {A , C} ,{. , O} ,{N , C} ,{. , O} ,{D , C} ]  -->  AND
[ {F , C} ,{. , O} ,{R , C} ,{. , O} ,{O , C} ,{. , O} ,{M , C} ]  -->  FROM
[ {, , C} ]  -->  ,
[ {N , C} ,{. , O} ,{O , C} ,{. , O} ,{T , C} ]  -->  NOT
[ {\n , C} ,{+ , O} ,{\t , C} ,{+ , O} ,{  , C} ]  -->  SEP
[ {( , O} ,{a , C} ,{+ , O} ,{b , C} ,{+ , O} ,{c , C} ,{+ , O} ,{d , C} ,{+ , O} ,{e , C} ,{+ , O} ,{f , C} ,{+ , O} ,{g , C} ,{+ , O} ,{h , C} ,{+ , O} ,{i , C} ,{+ , O} ,{j , C} ,{+ , O} ,{k , C} ,{+ , O} ,{l , C} ,{+ , O} ,{m , C} ,{+ , O} ,{n , C} ,{+ , O} ,{o , C} ,{+ , O} ,{p , C} ,{+ , O} ,{q , C} ,{+ , O} ,{r , C} ,{+ , O} ,{s , C} ,{+ , O} ,{t , C} ,{+ , O} ,{u , C} ,{+ , O} ,{v , C} ,{+ , O} ,{w , C} ,{+ , O} ,{x , C} ,{+ , O} ,{y , C} ,{+ , O} ,{z , C} ,{) , O} ,{. , O} ,{( , O} ,{1 , C} ,{+ , O} ,{2 , C} ,{+ , O} ,{3 , C} ,{+ , O} ,{4 , C} ,{+ , O} ,{5 , C} ,{+ , O} ,{6 , C} ,{+ , O} ,{7 , C} ,{+ , O} ,{8 , C} ,{+ , O} ,{9 , C} ,{+ , O} ,{0 , C} ,{+ , O} ,{a , C} ,{+ , O} ,{b , C} ,{+ , O} ,{c , C} ,{+ , O} ,{d , C} ,{+ , O} ,{e , C} ,{+ , O} ,{f , C} ,{+ , O} ,{g , C} ,{+ , O} ,{h , C} ,{+ , O} ,{i , C} ,{+ , O} ,{j , C} ,{+ , O} ,{k , C} ,{+ , O} ,{l , C} ,{+ , O} ,{m , C} ,{+ , O} ,{n , C} ,{+ , O} ,{o , C} ,{+ , O} ,{p , C} ,{+ , O} ,{q , C} ,{+ , O} ,{r , C} ,{+ , O} ,{s , C} ,{+ , O} ,{t , C} ,{+ , O} ,{u , C} ,{+ , O} ,{v , C} ,{+ , O} ,{w , C} ,{+ , O} ,{x , C} ,{+ , O} ,{y , C} ,{+ , O} ,{z , C} ,{) , O} ,{* , O} ]  -->  ID

___________________________________________________________________________

POSTFIX PROCESSED LEX DEFINATIONS -->
#Registered Tokens: 26

[ {D , C} ,{E , C} ,{. , O} ,{L , C} ,{. , O} ,{E , C} ,{. , O} ,{T , C} ,{. , O} ,{E , C} ,{. , O} ]  -->  DELETE
[ {I , C} ,{N , C} ,{. , O} ,{T , C} ,{. , O} ,{O , C} ,{. , O} ]  -->  INTO
[ {I , C} ,{N , C} ,{. , O} ,{S , C} ,{. , O} ,{E , C} ,{. , O} ,{R , C} ,{. , O} ,{T , C} ,{. , O} ]  -->  INSERT
[ {> , C} ,{= , C} ,{. , O} ]  -->  >=
[ {> , C} ]  -->  >
[ {= , C} ]  -->  =
[ {< , C} ,{= , C} ,{. , O} ]  -->  <=
[ {< , C} ]  -->  <
[ {) , C} ]  -->  )
[ {( , C} ]  -->  (
[ {V , C} ,{A , C} ,{. , O} ,{L , C} ,{. , O} ,{U , C} ,{. , O} ,{E , C} ,{. , O} ,{S , C} ,{. , O} ]  -->  VALUES
[ {. , C} ]  -->  .
[ {; , C} ]  -->  ;
[ {B , C} ,{Y , C} ,{. , O} ]  -->  BY
[ {O , C} ,{R , C} ,{. , O} ]  -->  OR
[ {S , C} ,{E , C} ,{. , O} ,{L , C} ,{. , O} ,{E , C} ,{. , O} ,{C , C} ,{. , O} ,{T , C} ,{. , O} ]  -->  SELECT
[ {W , C} ,{H , C} ,{. , O} ,{E , C} ,{. , O} ,{R , C} ,{. , O} ,{E , C} ,{. , O} ]  -->  WHERE
[ {G , C} ,{R , C} ,{. , O} ,{O , C} ,{. , O} ,{U , C} ,{. , O} ,{P , C} ,{. , O} ]  -->  GROUP
[ {O , C} ,{R , C} ,{. , O} ,{D , C} ,{. , O} ,{E , C} ,{. , O} ,{R , C} ,{. , O} ]  -->  ORDER
[ {H , C} ,{A , C} ,{. , O} ,{V , C} ,{. , O} ,{I , C} ,{. , O} ,{N , C} ,{. , O} ,{G , C} ,{. , O} ]  -->  HAVING
[ {A , C} ,{N , C} ,{. , O} ,{D , C} ,{. , O} ]  -->  AND
[ {F , C} ,{R , C} ,{. , O} ,{O , C} ,{. , O} ,{M , C} ,{. , O} ]  -->  FROM
[ {, , C} ]  -->  ,
[ {N , C} ,{O , C} ,{. , O} ,{T , C} ,{. , O} ]  -->  NOT
[ {\n , C} ,{\t , C} ,{+ , O} ,{  , C} ,{+ , O} ]  -->  SEP
[ {a , C} ,{b , C} ,{+ , O} ,{c , C} ,{+ , O} ,{d , C} ,{+ , O} ,{e , C} ,{+ , O} ,{f , C} ,{+ , O} ,{g , C} ,{+ , O} ,{h , C} ,{+ , O} ,{i , C} ,{+ , O} ,{j , C} ,{+ , O} ,{k , C} ,{+ , O} ,{l , C} ,{+ , O} ,{m , C} ,{+ , O} ,{n , C} ,{+ , O} ,{o , C} ,{+ , O} ,{p , C} ,{+ , O} ,{q , C} ,{+ , O} ,{r , C} ,{+ , O} ,{s , C} ,{+ , O} ,{t , C} ,{+ , O} ,{u , C} ,{+ , O} ,{v , C} ,{+ , O} ,{w , C} ,{+ , O} ,{x , C} ,{+ , O} ,{y , C} ,{+ , O} ,{z , C} ,{+ , O} ,{1 , C} ,{2 , C} ,{+ , O} ,{3 , C} ,{+ , O} ,{4 , C} ,{+ , O} ,{5 , C} ,{+ , O} ,{6 , C} ,{+ , O} ,{7 , C} ,{+ , O} ,{8 , C} ,{+ , O} ,{9 , C} ,{+ , O} ,{0 , C} ,{+ , O} ,{a , C} ,{+ , O} ,{b , C} ,{+ , O} ,{c , C} ,{+ , O} ,{d , C} ,{+ , O} ,{e , C} ,{+ , O} ,{f , C} ,{+ , O} ,{g , C} ,{+ , O} ,{h , C} ,{+ , O} ,{i , C} ,{+ , O} ,{j , C} ,{+ , O} ,{k , C} ,{+ , O} ,{l , C} ,{+ , O} ,{m , C} ,{+ , O} ,{n , C} ,{+ , O} ,{o , C} ,{+ , O} ,{p , C} ,{+ , O} ,{q , C} ,{+ , O} ,{r , C} ,{+ , O} ,{s , C} ,{+ , O} ,{t , C} ,{+ , O} ,{u , C} ,{+ , O} ,{v , C} ,{+ , O} ,{w , C} ,{+ , O} ,{x , C} ,{+ , O} ,{y , C} ,{+ , O} ,{z , C} ,{+ , O} ,{* , O} ,{. , O} ]  -->  ID

___________________________________________________________________________

COMBINED SYNTAX TREE -->
Pre-Order Traversaln ] [ \t ] ] [   ] ] [ # ] ] ] [ . [ . [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ a ] [ b ] ] [ c ] ] [ d ] ] [ e ] ] [ f ] ] [ g ] ] [ h ] ] [ i ] ] [ j ] ] [ k ] ] [ l ] ] [ m ] ] [ n ] ] [ o ] ] [ p ] ] [ q ] ] [ r ] ] [ s ] ] [ t ] ] [ u ] ] [ v ] ] [ w ] ] [ x ] ] [ y ] ] [ z ] ] [ * [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ + [ 1 ] [ 2 ] ] [ 3 ] ] [ 4 ] ] [ 5 ] ] [ 6 ] ] [ 7 ] ] [ 8 ] ] [ 9 ] ] [ 0 ] ] [ a ] ] [ b ] ] [ c ] ] [ d ] ] [ e ] ] [ f ] ] [ g ] ] [ h ] ] [ i ] ] [ j ] ] [ k ] ] [ l ] ] [ m ] ] [ n ] ] [ o ] ] [ p ] ] [ q ] ] [ r ] ] [ s ] ] [ t ] ] [ u ] ] [ v ] ] [ w ] ] [ x ] ] [ y ] ] [ z ] ] ] ] [ # ] ] ]
Final Node to Token Type Map -->
#  -->  ,
#  -->  FROM
#  -->  ID
#  -->  ORDER
#  -->  HAVING
#  -->  GROUP
#  -->  WHERE
#  -->  >
#  -->  (
#  -->  SEP
#  -->  =
#  -->  >=
#  -->  DELETE
#  -->  INTO
#  -->  INSERT
#  -->  ;
#  -->  NOT
#  -->  <=
#  -->  <
#  -->  AND
#  -->  )
#  -->  BY
#  -->  VALUES
#  -->  .
#  -->  OR
#  -->  SELECT

___________________________________________________________________________

MASTER SYNTAX TREE SPECIFICATIONS -->
#0 -->
Nullable: False
First Pos: 0, 
Last Pos: 0, 
Follow Pos: 1, 


#1 -->
Nullable: False
First Pos: 1, 
Last Pos: 1, 
Follow Pos: 2, 


#2 -->
Nullable: False
First Pos: 2, 
Last Pos: 2, 
Follow Pos: 3, 


#3 -->
Nullable: False
First Pos: 3, 
Last Pos: 3, 
Follow Pos: 4, 


#4 -->
Nullable: False
First Pos: 4, 
Last Pos: 4, 
Follow Pos: 5, 


#5 -->
Nullable: False
First Pos: 5, 
Last Pos: 5, 
Follow Pos: 6, 


#6 -->
Nullable: False
First Pos: 6, 
Last Pos: 6, 
Follow Pos: 


#7 -->
Nullable: False
First Pos: 7, 
Last Pos: 7, 
Follow Pos: 8, 


#8 -->
Nullable: False
First Pos: 8, 
Last Pos: 8, 
Follow Pos: 9, 


#9 -->
Nullable: False
First Pos: 9, 
Last Pos: 9, 
Follow Pos: 10, 


#10 -->
Nullable: False
First Pos: 10, 
Last Pos: 10, 
Follow Pos: 11, 


#11 -->
Nullable: False
First Pos: 11, 
Last Pos: 11, 
Follow Pos: 


#12 -->
Nullable: False
First Pos: 12, 
Last Pos: 12, 
Follow Pos: 13, 


#13 -->
Nullable: False
First Pos: 13, 
Last Pos: 13, 
Follow Pos: 14, 


#14 -->
Nullable: False
First Pos: 14, 
Last Pos: 14, 
Follow Pos: 15, 


#15 -->
Nullable: False
First Pos: 15, 
Last Pos: 15, 
Follow Pos: 16, 


#16 -->
Nullable: False
First Pos: 16, 
Last Pos: 16, 
Follow Pos: 17, 


#17 -->
Nullable: False
First Pos: 17, 
Last Pos: 17, 
Follow Pos: 18, 


#18 -->
Nullable: False
First Pos: 18, 
Last Pos: 18, 
Follow Pos: 


#19 -->
Nullable: False
First Pos: 19, 
Last Pos: 19, 
Follow Pos: 20, 


#20 -->
Nullable: False
First Pos: 20, 
Last Pos: 20, 
Follow Pos: 21, 


#21 -->
Nullable: False
First Pos: 21, 
Last Pos: 21, 
Follow Pos: 


#22 -->
Nullable: False
First Pos: 22, 
Last Pos: 22, 
Follow Pos: 23, 


#23 -->
Nullable: False
First Pos: 23, 
Last Pos: 23, 
Follow Pos: 


#24 -->
Nullable: False
First Pos: 24, 
Last Pos: 24, 
Follow Pos: 25, 


#25 -->
Nullable: False
First Pos: 25, 
Last Pos: 25, 
Follow Pos: 


#26 -->
Nullable: False
First Pos: 26, 
Last Pos: 26, 
Follow Pos: 27, 


#27 -->
Nullable: False
First Pos: 27, 
Last Pos: 27, 
Follow Pos: 28, 


#28 -->
Nullable: False
First Pos: 28, 
Last Pos: 28, 
Follow Pos: 


#29 -->
Nullable: False
First Pos: 29, 
Last Pos: 29, 
Follow Pos: 30, 


#30 -->
Nullable: False
First Pos: 30, 
Last Pos: 30, 
Follow Pos: 


#31 -->
Nullable: False
First Pos: 31, 
Last Pos: 31, 
Follow Pos: 32, 


#32 -->
Nullable: False
First Pos: 32, 
Last Pos: 32, 
Follow Pos: 


#33 -->
Nullable: False
First Pos: 33, 
Last Pos: 33, 
Follow Pos: 34, 


#34 -->
Nullable: False
First Pos: 34, 
Last Pos: 34, 
Follow Pos: 


#35 -->
Nullable: False
First Pos: 35, 
Last Pos: 35, 
Follow Pos: 36, 


#36 -->
Nullable: False
First Pos: 36, 
Last Pos: 36, 
Follow Pos: 37, 


#37 -->
Nullable: False
First Pos: 37, 
Last Pos: 37, 
Follow Pos: 38, 


#38 -->
Nullable: False
First Pos: 38, 
Last Pos: 38, 
Follow Pos: 39, 


#39 -->
Nullable: False
First Pos: 39, 
Last Pos: 39, 
Follow Pos: 40, 


#40 -->
Nullable: False
First Pos: 40, 
Last Pos: 40, 
Follow Pos: 41, 


#41 -->
Nullable: False
First Pos: 41, 
Last Pos: 41, 
Follow Pos: 


#42 -->
Nullable: False
First Pos: 42, 
Last Pos: 42, 
Follow Pos: 43, 


#43 -->
Nullable: False
First Pos: 43, 
Last Pos: 43, 
Follow Pos: 


#44 -->
Nullable: False
First Pos: 44, 
Last Pos: 44, 
Follow Pos: 45, 


#45 -->
Nullable: False
First Pos: 45, 
Last Pos: 45, 
Follow Pos: 


#46 -->
Nullable: False
First Pos: 46, 
Last Pos: 46, 
Follow Pos: 47, 


#47 -->
Nullable: False
First Pos: 47, 
Last Pos: 47, 
Follow Pos: 48, 


#48 -->
Nullable: False
First Pos: 48, 
Last Pos: 48, 
Follow Pos: 


#49 -->
Nullable: False
First Pos: 49, 
Last Pos: 49, 
Follow Pos: 50, 


#50 -->
Nullable: False
First Pos: 50, 
Last Pos: 50, 
Follow Pos: 51, 


#51 -->
Nullable: False
First Pos: 51, 
Last Pos: 51, 
Follow Pos: 


#52 -->
Nullable: False
First Pos: 52, 
Last Pos: 52, 
Follow Pos: 53, 


#53 -->
Nullable: False
First Pos: 53, 
Last Pos: 53, 
Follow Pos: 54, 


#54 -->
Nullable: False
First Pos: 54, 
Last Pos: 54, 
Follow Pos: 55, 


#55 -->
Nullable: False
First Pos: 55, 
Last Pos: 55, 
Follow Pos: 56, 


#56 -->
Nullable: False
First Pos: 56, 
Last Pos: 56, 
Follow Pos: 57, 


#57 -->
Nullable: False
First Pos: 57, 
Last Pos: 57, 
Follow Pos: 58, 


#58 -->
Nullable: False
First Pos: 58, 
Last Pos: 58, 
Follow Pos: 


#59 -->
Nullable: False
First Pos: 59, 
Last Pos: 59, 
Follow Pos: 60, 


#60 -->
Nullable: False
First Pos: 60, 
Last Pos: 60, 
Follow Pos: 61, 


#61 -->
Nullable: False
First Pos: 61, 
Last Pos: 61, 
Follow Pos: 62, 


#62 -->
Nullable: False
First Pos: 62, 
Last Pos: 62, 
Follow Pos: 63, 


#63 -->
Nullable: False
First Pos: 63, 
Last Pos: 63, 
Follow Pos: 64, 


#64 -->
Nullable: False
First Pos: 64, 
Last Pos: 64, 
Follow Pos: 


#65 -->
Nullable: False
First Pos: 65, 
Last Pos: 65, 
Follow Pos: 66, 


#66 -->
Nullable: False
First Pos: 66, 
Last Pos: 66, 
Follow Pos: 67, 


#67 -->
Nullable: False
First Pos: 67, 
Last Pos: 67, 
Follow Pos: 68, 


#68 -->
Nullable: False
First Pos: 68, 
Last Pos: 68, 
Follow Pos: 69, 


#69 -->
Nullable: False
First Pos: 69, 
Last Pos: 69, 
Follow Pos: 70, 


#70 -->
Nullable: False
First Pos: 70, 
Last Pos: 70, 
Follow Pos: 


#71 -->
Nullable: False
First Pos: 71, 
Last Pos: 71, 
Follow Pos: 72, 


#72 -->
Nullable: False
First Pos: 72, 
Last Pos: 72, 
Follow Pos: 73, 


#73 -->
Nullable: False
First Pos: 73, 
Last Pos: 73, 
Follow Pos: 74, 


#74 -->
Nullable: False
First Pos: 74, 
Last Pos: 74, 
Follow Pos: 75, 


#75 -->
Nullable: False
First Pos: 75, 
Last Pos: 75, 
Follow Pos: 76, 


#76 -->
Nullable: False
First Pos: 76, 
Last Pos: 76, 
Follow Pos: 


#77 -->
Nullable: False
First Pos: 77, 
Last Pos: 77, 
Follow Pos: 78, 


#78 -->
Nullable: False
First Pos: 78, 
Last Pos: 78, 
Follow Pos: 79, 


#79 -->
Nullable: False
First Pos: 79, 
Last Pos: 79, 
Follow Pos: 80, 


#80 -->
Nullable: False
First Pos: 80, 
Last Pos: 80, 
Follow Pos: 81, 


#81 -->
Nullable: False
First Pos: 81, 
Last Pos: 81, 
Follow Pos: 82, 


#82 -->
Nullable: False
First Pos: 82, 
Last Pos: 82, 
Follow Pos: 83, 


#83 -->
Nullable: False
First Pos: 83, 
Last Pos: 83, 
Follow Pos: 


#84 -->
Nullable: False
First Pos: 84, 
Last Pos: 84, 
Follow Pos: 85, 


#85 -->
Nullable: False
First Pos: 85, 
Last Pos: 85, 
Follow Pos: 86, 


#86 -->
Nullable: False
First Pos: 86, 
Last Pos: 86, 
Follow Pos: 87, 


#87 -->
Nullable: False
First Pos: 87, 
Last Pos: 87, 
Follow Pos: 


#88 -->
Nullable: False
First Pos: 88, 
Last Pos: 88, 
Follow Pos: 89, 


#89 -->
Nullable: False
First Pos: 89, 
Last Pos: 89, 
Follow Pos: 90, 


#90 -->
Nullable: False
First Pos: 90, 
Last Pos: 90, 
Follow Pos: 91, 


#91 -->
Nullable: False
First Pos: 91, 
Last Pos: 91, 
Follow Pos: 92, 


#92 -->
Nullable: False
First Pos: 92, 
Last Pos: 92, 
Follow Pos: 


#93 -->
Nullable: False
First Pos: 93, 
Last Pos: 93, 
Follow Pos: 94, 


#94 -->
Nullable: False
First Pos: 94, 
Last Pos: 94, 
Follow Pos: 


#95 -->
Nullable: False
First Pos: 95, 
Last Pos: 95, 
Follow Pos: 96, 


#96 -->
Nullable: False
First Pos: 96, 
Last Pos: 96, 
Follow Pos: 97, 


#97 -->
Nullable: False
First Pos: 97, 
Last Pos: 97, 
Follow Pos: 98, 


#98 -->
Nullable: False
First Pos: 98, 
Last Pos: 98, 
Follow Pos: 


#99 -->
Nullable: False
First Pos: 99, 
Last Pos: 99, 
Follow Pos: 102, 


#100 -->
Nullable: False
First Pos: 100, 
Last Pos: 100, 
Follow Pos: 102, 


#101 -->
Nullable: False
First Pos: 101, 
Last Pos: 101, 
Follow Pos: 102, 


#102 -->
Nullable: False
First Pos: 102, 
Last Pos: 102, 
Follow Pos: 


#103 -->
Nullable: False
First Pos: 103, 
Last Pos: 103, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#104 -->
Nullable: False
First Pos: 104, 
Last Pos: 104, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#105 -->
Nullable: False
First Pos: 105, 
Last Pos: 105, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#106 -->
Nullable: False
First Pos: 106, 
Last Pos: 106, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#107 -->
Nullable: False
First Pos: 107, 
Last Pos: 107, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#108 -->
Nullable: False
First Pos: 108, 
Last Pos: 108, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#109 -->
Nullable: False
First Pos: 109, 
Last Pos: 109, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#110 -->
Nullable: False
First Pos: 110, 
Last Pos: 110, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#111 -->
Nullable: False
First Pos: 111, 
Last Pos: 111, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#112 -->
Nullable: False
First Pos: 112, 
Last Pos: 112, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#113 -->
Nullable: False
First Pos: 113, 
Last Pos: 113, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#114 -->
Nullable: False
First Pos: 114, 
Last Pos: 114, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#115 -->
Nullable: False
First Pos: 115, 
Last Pos: 115, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#116 -->
Nullable: False
First Pos: 116, 
Last Pos: 116, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#117 -->
Nullable: False
First Pos: 117, 
Last Pos: 117, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#118 -->
Nullable: False
First Pos: 118, 
Last Pos: 118, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#119 -->
Nullable: False
First Pos: 119, 
Last Pos: 119, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#120 -->
Nullable: False
First Pos: 120, 
Last Pos: 120, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#121 -->
Nullable: False
First Pos: 121, 
Last Pos: 121, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#122 -->
Nullable: False
First Pos: 122, 
Last Pos: 122, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#123 -->
Nullable: False
First Pos: 123, 
Last Pos: 123, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#124 -->
Nullable: False
First Pos: 124, 
Last Pos: 124, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#125 -->
Nullable: False
First Pos: 125, 
Last Pos: 125, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#126 -->
Nullable: False
First Pos: 126, 
Last Pos: 126, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#127 -->
Nullable: False
First Pos: 127, 
Last Pos: 127, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#128 -->
Nullable: False
First Pos: 128, 
Last Pos: 128, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#129 -->
Nullable: False
First Pos: 129, 
Last Pos: 129, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#130 -->
Nullable: False
First Pos: 130, 
Last Pos: 130, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#131 -->
Nullable: False
First Pos: 131, 
Last Pos: 131, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#132 -->
Nullable: False
First Pos: 132, 
Last Pos: 132, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#133 -->
Nullable: False
First Pos: 133, 
Last Pos: 133, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#134 -->
Nullable: False
First Pos: 134, 
Last Pos: 134, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#135 -->
Nullable: False
First Pos: 135, 
Last Pos: 135, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#136 -->
Nullable: False
First Pos: 136, 
Last Pos: 136, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#137 -->
Nullable: False
First Pos: 137, 
Last Pos: 137, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#138 -->
Nullable: False
First Pos: 138, 
Last Pos: 138, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#139 -->
Nullable: False
First Pos: 139, 
Last Pos: 139, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#140 -->
Nullable: False
First Pos: 140, 
Last Pos: 140, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#141 -->
Nullable: False
First Pos: 141, 
Last Pos: 141, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#142 -->
Nullable: False
First Pos: 142, 
Last Pos: 142, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#143 -->
Nullable: False
First Pos: 143, 
Last Pos: 143, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#144 -->
Nullable: False
First Pos: 144, 
Last Pos: 144, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#145 -->
Nullable: False
First Pos: 145, 
Last Pos: 145, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#146 -->
Nullable: False
First Pos: 146, 
Last Pos: 146, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#147 -->
Nullable: False
First Pos: 147, 
Last Pos: 147, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#148 -->
Nullable: False
First Pos: 148, 
Last Pos: 148, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#149 -->
Nullable: False
First Pos: 149, 
Last Pos: 149, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#150 -->
Nullable: False
First Pos: 150, 
Last Pos: 150, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#151 -->
Nullable: False
First Pos: 151, 
Last Pos: 151, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#152 -->
Nullable: False
First Pos: 152, 
Last Pos: 152, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#153 -->
Nullable: False
First Pos: 153, 
Last Pos: 153, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#154 -->
Nullable: False
First Pos: 154, 
Last Pos: 154, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#155 -->
Nullable: False
First Pos: 155, 
Last Pos: 155, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#156 -->
Nullable: False
First Pos: 156, 
Last Pos: 156, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#157 -->
Nullable: False
First Pos: 157, 
Last Pos: 157, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#158 -->
Nullable: False
First Pos: 158, 
Last Pos: 158, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#159 -->
Nullable: False
First Pos: 159, 
Last Pos: 159, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#160 -->
Nullable: False
First Pos: 160, 
Last Pos: 160, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#161 -->
Nullable: False
First Pos: 161, 
Last Pos: 161, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#162 -->
Nullable: False
First Pos: 162, 
Last Pos: 162, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#163 -->
Nullable: False
First Pos: 163, 
Last Pos: 163, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#164 -->
Nullable: False
First Pos: 164, 
Last Pos: 164, 
Follow Pos: 140, 162, 148, 146, 160, 163, 132, 156, 129, 149, 145, 130, 164, 144, 137, 139, 165, 161, 150, 138, 136, 147, 154, 131, 135, 153, 158, 152, 133, 157, 155, 141, 134, 151, 142, 143, 159, 


#165 -->
Nullable: False
First Pos: 165, 
Last Pos: 165, 
Follow Pos: 



___________________________________________________________________________

DFA DEFINATIONS -->
Symbols from RE: 0 , 9 , 8 , 7 , 6 , 5 , 4 , 3 , 2 , 1 , z , y , v , u , t , s , r , q , p , n , m , l , k , j , i , h , g , f , e , w , ( , M , x , ) , N , < , a , A , R , S , . , 	 , > , c , O , V , E , o ,   , L , D , T , I , = , b , U , ; , B , 
 , Y , C , W , H , G , P , F , , , d , 
DFA -->
-> #0 -->  (z , 1)  |  (y , 1)  |  (v , 1)  |  (u , 1)  |  (t , 1)  |  (s , 1)  |  (r , 1)  |  (q , 1)  |  (p , 1)  |  (n , 1)  |  (m , 1)  |  (l , 1)  |  (k , 1)  |  (j , 1)  |  (i , 1)  |  (h , 1)  |  (g , 1)  |  (f , 1)  |  (e , 1)  |  (w , 1)  |  (( , 2)  |  (x , 1)  |  () , 3)  |  (N , 4)  |  (< , 5)  |  (a , 1)  |  (A , 6)  |  (S , 7)  |  (. , 8)  |  (\t , 9)  |  (> , 10)  |  (c , 1)  |  (O , 11)  |  (V , 12)  |  (o , 1)  |  (  , 9)  |  (D , 13)  |  (I , 14)  |  (= , 15)  |  (b , 1)  |  (; , 16)  |  (B , 17)  |  (\n , 9)  |  (W , 18)  |  (H , 19)  |  (G , 20)  |  (F , 21)  |  (, , 22)  |  (d , 1)  |   &SubCnt: 49
** (ID) #1 -->  (0 , 1)  |  (9 , 1)  |  (8 , 1)  |  (7 , 1)  |  (6 , 1)  |  (5 , 1)  |  (4 , 1)  |  (3 , 1)  |  (2 , 1)  |  (1 , 1)  |  (z , 1)  |  (y , 1)  |  (v , 1)  |  (u , 1)  |  (t , 1)  |  (s , 1)  |  (r , 1)  |  (q , 1)  |  (p , 1)  |  (n , 1)  |  (m , 1)  |  (l , 1)  |  (k , 1)  |  (j , 1)  |  (i , 1)  |  (h , 1)  |  (g , 1)  |  (f , 1)  |  (e , 1)  |  (w , 1)  |  (x , 1)  |  (a , 1)  |  (c , 1)  |  (o , 1)  |  (b , 1)  |  (d , 1)  |   &SubCnt: 36
** (() #2 -->   &SubCnt: 0
** ()) #3 -->   &SubCnt: 0
   #4 -->  (O , 23)  |   &SubCnt: 1
** (<) #5 -->  (= , 24)  |   &SubCnt: 1
   #6 -->  (N , 25)  |   &SubCnt: 1
   #7 -->  (E , 26)  |   &SubCnt: 1
** (.) #8 -->   &SubCnt: 0
** (SEP) #9 -->   &SubCnt: 0
** (>) #10 -->  (= , 27)  |   &SubCnt: 1
   #11 -->  (R , 28)  |   &SubCnt: 1
   #12 -->  (A , 29)  |   &SubCnt: 1
   #13 -->  (E , 30)  |   &SubCnt: 1
   #14 -->  (N , 31)  |   &SubCnt: 1
** (=) #15 -->   &SubCnt: 0
** (;) #16 -->   &SubCnt: 0
   #17 -->  (Y , 32)  |   &SubCnt: 1
   #18 -->  (H , 33)  |   &SubCnt: 1
   #19 -->  (A , 34)  |   &SubCnt: 1
   #20 -->  (R , 35)  |   &SubCnt: 1
   #21 -->  (R , 36)  |   &SubCnt: 1
** (,) #22 -->   &SubCnt: 0
   #23 -->  (T , 37)  |   &SubCnt: 1
** (<=) #24 -->   &SubCnt: 0
   #25 -->  (D , 38)  |   &SubCnt: 1
   #26 -->  (L , 39)  |   &SubCnt: 1
** (>=) #27 -->   &SubCnt: 0
** (OR) #28 -->  (D , 40)  |   &SubCnt: 1
   #29 -->  (L , 41)  |   &SubCnt: 1
   #30 -->  (L , 42)  |   &SubCnt: 1
   #31 -->  (S , 43)  |  (T , 44)  |   &SubCnt: 2
** (BY) #32 -->   &SubCnt: 0
   #33 -->  (E , 45)  |   &SubCnt: 1
   #34 -->  (V , 46)  |   &SubCnt: 1
   #35 -->  (O , 47)  |   &SubCnt: 1
   #36 -->  (O , 48)  |   &SubCnt: 1
** (NOT) #37 -->   &SubCnt: 0
** (AND) #38 -->   &SubCnt: 0
   #39 -->  (E , 49)  |   &SubCnt: 1
   #40 -->  (E , 50)  |   &SubCnt: 1
   #41 -->  (U , 51)  |   &SubCnt: 1
   #42 -->  (E , 52)  |   &SubCnt: 1
   #43 -->  (E , 53)  |   &SubCnt: 1
   #44 -->  (O , 54)  |   &SubCnt: 1
   #45 -->  (R , 55)  |   &SubCnt: 1
   #46 -->  (I , 56)  |   &SubCnt: 1
   #47 -->  (U , 57)  |   &SubCnt: 1
   #48 -->  (M , 58)  |   &SubCnt: 1
   #49 -->  (C , 59)  |   &SubCnt: 1
   #50 -->  (R , 60)  |   &SubCnt: 1
   #51 -->  (E , 61)  |   &SubCnt: 1
   #52 -->  (T , 62)  |   &SubCnt: 1
   #53 -->  (R , 63)  |   &SubCnt: 1
** (INTO) #54 -->   &SubCnt: 0
   #55 -->  (E , 64)  |   &SubCnt: 1
   #56 -->  (N , 65)  |   &SubCnt: 1
   #57 -->  (P , 66)  |   &SubCnt: 1
** (FROM) #58 -->   &SubCnt: 0
   #59 -->  (T , 67)  |   &SubCnt: 1
** (ORDER) #60 -->   &SubCnt: 0
   #61 -->  (S , 68)  |   &SubCnt: 1
   #62 -->  (E , 69)  |   &SubCnt: 1
   #63 -->  (T , 70)  |   &SubCnt: 1
** (WHERE) #64 -->   &SubCnt: 0
   #65 -->  (G , 71)  |   &SubCnt: 1
** (GROUP) #66 -->   &SubCnt: 0
** (SELECT) #67 -->   &SubCnt: 0
** (VALUES) #68 -->   &SubCnt: 0
** (DELETE) #69 -->   &SubCnt: 0
** (INSERT) #70 -->   &SubCnt: 0
** (HAVING) #71 -->   &SubCnt: 0

Size:  72

Alias -->
#0 -> 105 ,104 ,111 ,123 ,119 ,118 ,114 ,120 ,113 ,107 ,115 ,124 ,117 ,103 ,35 ,122 ,126 ,95 ,24 ,44 ,128 ,42 ,59 ,100 ,33 ,49 ,84 ,19 ,108 ,127 ,88 ,112 ,22 ,77 ,0 ,93 ,110 ,101 ,71 ,29 ,31 ,52 ,99 ,46 ,7 ,12 ,109 ,26 ,125 ,65 ,121 ,116 ,106 ,
#1 -> 159 ,137 ,164 ,139 ,165 ,161 ,130 ,145 ,149 ,144 ,132 ,163 ,162 ,140 ,129 ,156 ,148 ,160 ,146 ,150 ,138 ,136 ,147 ,154 ,131 ,135 ,153 ,158 ,152 ,133 ,157 ,155 ,141 ,134 ,151 ,142 ,143 ,
#2 -> 34 ,
#3 -> 32 ,
#4 -> 96 ,
#5 -> 27 ,30 ,
#6 -> 85 ,
#7 -> 53 ,
#8 -> 43 ,
#9 -> 102 ,
#10 -> 23 ,20 ,
#11 -> 72 ,50 ,
#12 -> 36 ,
#13 -> 1 ,
#14 -> 13 ,8 ,
#15 -> 25 ,
#16 -> 45 ,
#17 -> 47 ,
#18 -> 60 ,
#19 -> 78 ,
#20 -> 66 ,
#21 -> 89 ,
#22 -> 94 ,
#23 -> 97 ,
#24 -> 28 ,
#25 -> 86 ,
#26 -> 54 ,
#27 -> 21 ,
#28 -> 51 ,73 ,
#29 -> 37 ,
#30 -> 2 ,
#31 -> 9 ,14 ,
#32 -> 48 ,
#33 -> 61 ,
#34 -> 79 ,
#35 -> 67 ,
#36 -> 90 ,
#37 -> 98 ,
#38 -> 87 ,
#39 -> 55 ,
#40 -> 74 ,
#41 -> 38 ,
#42 -> 3 ,
#43 -> 15 ,
#44 -> 10 ,
#45 -> 62 ,
#46 -> 80 ,
#47 -> 68 ,
#48 -> 91 ,
#49 -> 56 ,
#50 -> 75 ,
#51 -> 39 ,
#52 -> 4 ,
#53 -> 16 ,
#54 -> 11 ,
#55 -> 63 ,
#56 -> 81 ,
#57 -> 69 ,
#58 -> 92 ,
#59 -> 57 ,
#60 -> 76 ,
#61 -> 40 ,
#62 -> 5 ,
#63 -> 17 ,
#64 -> 64 ,
#65 -> 82 ,
#66 -> 70 ,
#67 -> 58 ,
#68 -> 41 ,
#69 -> 6 ,
#70 -> 18 ,
#71 -> 83 ,

___________________________________________________________________________

READ INPUT CHARACTER STREAM -->
SELECT gtbl.atr, btbl.op FROM gtbl, btbl HAVING btbl.op > opwin;[END]

___________________________________________________________________________

TOKENS --> Size = 19
SELECT SELECT
ID gtbl
. .
ID atr
, ,
ID btbl
. .
ID op
FROM FROM
ID gtbl
, ,
ID btbl
HAVING HAVING
ID btbl
. .
ID op
> >
ID opwin
; ;

___________________________________________________________________________




___________________________________________________________________________
___________________________________________________________________________
___________________________________________________________________________
___________________________________________________________________________




RAW READ PRODUCTIONS (STRING) -->  [ Size = 41 ]
s -> stmt ; s
s -> E
stmt -> selst
stmt -> insst
stmt -> delst
ide -> ID ide'
ide' -> . ID
ide' -> E
selst -> SELECT idlste FROM idlist wherecl grpbycl ordercl
idlist -> ID idlnul
idlnul -> , ID idlnul
idlnul -> E
idlste -> ide idlnle
idlnle -> , ide idlnle
idlnle -> E
wherecl -> WHERE cond
wherecl -> E
grpbycl -> GROUP BY idlste havngcl
grpbycl -> E
havngcl -> HAVING cond
havngcl -> E
ordercl -> ORDER BY idlste
ordercl -> E
cond -> unitcd cond'
cond' -> cdjoin unitcd cond'
cond' -> E
cdjoin -> AND
cdjoin -> OR
unitcd -> NOT ( unitcd )
unitcd -> ide compop ide
compop -> =
compop -> >
compop -> <
compop -> >=
compop -> <=
insst -> INSERT INTO ID insst1
insst1 -> VALUES ( idlist )
insst1 -> ( ID insst' ID )
insst' -> , ID insst' ID ,
insst' -> ) VALUES (
delst -> DELETE FROM ID wherecl

___________________________________________________________________________

READ PRODUCTIONS [ Start Symbol = S(s) ] -->
S(delst) -> T(DELETE) T(FROM) T(ID) S(wherecl) 
S(insst) -> T(INSERT) T(INTO) T(ID) S(insst1) 
S(unitcd) -> T(NOT) T(() S(unitcd) T()) | S(ide) S(compop) S(ide) 
S(idlist) -> T(ID) S(idlnul) 
S(insst') -> T(,) T(ID) S(insst') T(ID) T(,) | T()) T(VALUES) T(() 
S(ide') -> T(.) T(ID) | T(E) 
S(s) -> S(stmt) T(;) S(s) | T(E) 
S(selst) -> T(SELECT) S(idlste) T(FROM) S(idlist) S(wherecl) S(grpbycl) S(ordercl) 
S(insst1) -> T(VALUES) T(() S(idlist) T()) | T(() T(ID) S(insst') T(ID) T()) 
S(cdjoin) -> T(AND) | T(OR) 
S(ide) -> T(ID) S(ide') 
S(compop) -> T(=) | T(>) | T(<) | T(>=) | T(<=) 
S(stmt) -> S(selst) | S(insst) | S(delst) 
S(idlnul) -> T(,) T(ID) S(idlnul) | T(E) 
S(cond) -> S(unitcd) S(cond') 
S(idlnle) -> T(,) S(ide) S(idlnle) | T(E) 
S(grpbycl) -> T(GROUP) T(BY) S(idlste) S(havngcl) | T(E) 
S(wherecl) -> T(WHERE) S(cond) | T(E) 
S(havngcl) -> T(HAVING) S(cond) | T(E) 
S(idlste) -> S(ide) S(idlnle) 
S(ordercl) -> T(ORDER) T(BY) S(idlste) | T(E) 
S(cond') -> S(cdjoin) S(unitcd) S(cond') | T(E) 

SYMBOLS:  S(delst) , S(insst) , S(unitcd) , S(idlist) , S(insst') , S(ide') , S(s) , S(selst) , S(insst1) , S(cdjoin) , S(ide) , S(compop) , S(stmt) , S(idlnul) , S(cond) , S(idlnle) , S(grpbycl) , S(wherecl) , S(havngcl) , S(idlste) , S(ordercl) , S(cond')
TERMINALS:  T($) , T(DELETE) , T(INTO) , T(INSERT) , T(>=) , T(<) , T(>) , T(=) , T()) , T(VALUES) , T(E) , T(.) , T(;) , T(<=) , T(BY) , T(OR) , T(SELECT) , T(WHERE) , T(GROUP) , T(ORDER) , T(HAVING) , T(AND) , T(FROM) , T(,) , T(NOT) , T(ID) , T(()

___________________________________________________________________________

LEFT RECURSION REMOVED PRODUCTIONS -->
S(cond') -> S(cdjoin) S(unitcd) S(cond') | T(E) 
S(ordercl) -> T(ORDER) T(BY) S(idlste) | T(E) 
S(idlste) -> S(ide) S(idlnle) 
S(havngcl) -> T(HAVING) S(cond) | T(E) 
S(wherecl) -> T(WHERE) S(cond) | T(E) 
S(grpbycl) -> T(GROUP) T(BY) S(idlste) S(havngcl) | T(E) 
S(idlist) -> T(ID) S(idlnul) 
S(ide') -> T(.) T(ID) | T(E) 
S(insst') -> T(,) T(ID) S(insst') T(ID) T(,) | T()) T(VALUES) T(() 
S(delst) -> T(DELETE) T(FROM) T(ID) S(wherecl) 
S(unitcd) -> T(NOT) T(() S(unitcd) T()) | S(ide) S(compop) S(ide) 
S(insst) -> T(INSERT) T(INTO) T(ID) S(insst1) 
S(s) -> S(stmt) T(;) S(s) | T(E) 
S(stmt) -> S(selst) | S(insst) | S(delst) 
S(compop) -> T(=) | T(>) | T(<) | T(>=) | T(<=) 
S(selst) -> T(SELECT) S(idlste) T(FROM) S(idlist) S(wherecl) S(grpbycl) S(ordercl) 
S(insst1) -> T(VALUES) T(() S(idlist) T()) | T(() T(ID) S(insst') T(ID) T()) 
S(cdjoin) -> T(AND) | T(OR) 
S(ide) -> T(ID) S(ide') 
S(idlnul) -> T(,) T(ID) S(idlnul) | T(E) 
S(cond) -> S(unitcd) S(cond') 
S(idlnle) -> T(,) S(ide) S(idlnle) | T(E) 

SYMBOLS:  S(delst) , S(insst) , S(unitcd) , S(idlist) , S(insst') , S(ide') , S(s) , S(selst) , S(insst1) , S(cdjoin) , S(ide) , S(compop) , S(stmt) , S(idlnul) , S(cond) , S(idlnle) , S(grpbycl) , S(wherecl) , S(havngcl) , S(idlste) , S(ordercl) , S(cond')
TERMINALS:  T($) , T(DELETE) , T(INTO) , T(INSERT) , T(>=) , T(<) , T(>) , T(=) , T()) , T(VALUES) , T(E) , T(.) , T(;) , T(<=) , T(BY) , T(OR) , T(SELECT) , T(WHERE) , T(GROUP) , T(ORDER) , T(HAVING) , T(AND) , T(FROM) , T(,) , T(NOT) , T(ID) , T(()

___________________________________________________________________________

NULLABLE MAP -->
S(idlist) -> False
S(cdjoin) -> False
S(insst1) -> False
S(wherecl) -> True
S(insst) -> False
S(grpbycl) -> True
S(cond) -> False
S(idlnle) -> True
S(idlnul) -> True
S(insst') -> False
S(ide') -> True
S(s) -> True
S(stmt) -> False
S(compop) -> False
S(havngcl) -> True
S(idlste) -> False
S(ordercl) -> True
S(cond') -> True
S(ide) -> False
S(selst) -> False
S(delst) -> False
S(unitcd) -> False

___________________________________________________________________________

FIRST MAP -->
S(s) -> { T(INSERT) , T(DELETE) , T(SELECT) }
S(cond') -> { T(AND) , T(OR) }
S(idlste) -> { T(ID) }
S(ordercl) -> { T(ORDER) }
S(idlist) -> { T(ID) }
S(ide') -> { T(.) }
S(insst') -> { T()) , T(,) }
S(delst) -> { T(DELETE) }
S(unitcd) -> { T(ID) , T(NOT) }
S(insst) -> { T(INSERT) }
S(wherecl) -> { T(WHERE) }
S(selst) -> { T(SELECT) }
S(insst1) -> { T(() , T(VALUES) }
S(cdjoin) -> { T(OR) , T(AND) }
S(ide) -> { T(ID) }
S(stmt) -> { T(DELETE) , T(SELECT) , T(INSERT) }
S(compop) -> { T(>=) , T(<) , T(=) , T(<=) , T(>) }
S(idlnul) -> { T(,) }
S(cond) -> { T(NOT) , T(ID) }
S(idlnle) -> { T(,) }
S(grpbycl) -> { T(GROUP) }
S(havngcl) -> { T(HAVING) }

___________________________________________________________________________

FOLLOW MAP -->
S(cond') -> { T(;) , T(ORDER) , T(GROUP) }
S(havngcl) -> { T(;) , T(ORDER) }
S(idlnle) -> { T(;) , T(HAVING) , T(ORDER) , T(FROM) }
S(cond) -> { T(;) , T(GROUP) , T(ORDER) }
S(delst) -> { T(;) }
S(stmt) -> { T(;) }
S(compop) -> { T(ID) }
S(s) -> { T($) }
S(ide) -> { T(GROUP) , T(HAVING) , T(FROM) , T(ORDER) , T(;) , T(OR) , T(AND) , T(<=) , T(>) , T(=) , T()) , T(>=) , T(<) , T(,) }
S(unitcd) -> { T(GROUP) , T(ORDER) , T(AND) , T()) , T(;) , T(OR) }
S(ordercl) -> { T(;) }
S(idlste) -> { T(;) , T(ORDER) , T(FROM) , T(HAVING) }
S(idlnul) -> { T(;) , T(WHERE) , T(ORDER) , T()) , T(GROUP) }
S(idlist) -> { T(;) , T()) , T(GROUP) , T(ORDER) , T(WHERE) }
S(wherecl) -> { T(;) , T(ORDER) , T(GROUP) }
S(insst) -> { T(;) }
S(grpbycl) -> { T(;) , T(ORDER) }
S(insst1) -> { T(;) }
S(cdjoin) -> { T(ID) , T(NOT) }
S(selst) -> { T(;) }
S(insst') -> { T(ID) }
S(ide') -> { T(GROUP) , T(ORDER) , T(FROM) , T(HAVING) , T(,) , T(<) , T(AND) , T(;) , T(OR) , T(<=) , T(>) , T(=) , T(>=) , T()) }

___________________________________________________________________________

LL(1) PARSING TABLE -->


S(delst)                                                                                            A(INVALID)                                                                                          A(PRODUCE[ S(delst) -> T(DELETE) T(FROM) T(ID) S(wherecl) ])                                        A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          
S(insst)                                                                                            A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(insst) -> T(INSERT) T(INTO) T(ID) S(insst
S(unitcdunitcd) -> T(NOT) T(() S(unitcd) T()) ])                                               A(PRODUCE[ S(unitcd) -> S(ide) S(compop) S(ide) ])                                                  A(INVALID)                                                                                          
S(idlist)                                                                                           A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(idlist) -> T(ID) S(idlnul) ])                                                          A(INVALID)                                                                                          
S(insstinsst') -> T()) T(VALUES) T(() ])                                                      A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(insst') -> T(,) T(ID) S(insst') T(ID) T(,) ])                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          
S(ideide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(ide') -> T(.) T(ID) ])                                                                 A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(INVALID)                                                                                          A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          
S(s)                                                                                                A(PRODUCE[ S(s) -> T(E) ])                                                                          A(PRODUCE[ S(s) -> S(stmt) T(;) S(s) ])                                                             A(INVALID)                                                                                          A(PRODUCE[ S(s) -> S(stmt) T(;) S(ss) -> S(stmt) T(;) S(s
S(selstselst) -> T(SELECT) S(idlste) T(FROM) S(idlist) S(wherecl) S(grpbycl) S(ordercl
S(insstinsst1) -> T(VALUES) T(() S(idlistinsst1) -> T(() T(ID) S(insst') T(ID) T()) ])                                          
S(cdjoincdjoin) -> T(OR) ])                                                                    A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(cdjoin) -> T(AND) ])                                                                   A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          
S(ideide) -> T(ID) S(ide') ])                                                               A(INVALID)                                                                                          
S(compop)                                                                                           A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(compop) -> T(>=) ])                                                                    A(PRODUCE[ S(compop) -> T(<) ])                                                                     A(PRODUCE[ S(compop) -> T(>) ])                                                                     A(PRODUCE[ S(compop) -> T(=) ])                                                                     A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(compop) -> T(<=) ])                                                                    A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          
S(stmt)                                                                                             A(INVALID)                                                                                          A(PRODUCE[ S(stmt) -> S(delst) ])                                                                   A(INVALID)                                                                                          A(PRODUCE[ S(stmt) -> S(insststmt) -> S(selst
S(idlnulidlnul) -> T(E) ])                                                                     A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(idlnul) -> T(E) ])                                                                     A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(idlnul) -> T(E) ])                                                                     A(PRODUCE[ S(idlnul) -> T(E) ])                                                                     A(PRODUCE[ S(idlnul) -> T(E) ])                                                                     A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(idlnul) -> T(,) T(ID) S(idlnul) ])                                                     A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          
S(condcond) -> S(unitcd) S(cond') ])                                                         A(PRODUCE[ S(cond) -> S(unitcd) S(cond') ])                                                         A(INVALID)                                                                                          
S(idlnleidlnle) -> T(E) ])                                                                     A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(idlnle) -> T(E) ])                                                                     A(PRODUCE[ S(idlnle) -> T(E) ])                                                                     A(INVALID)                                                                                          A(PRODUCE[ S(idlnle) -> T(E) ])                                                                     A(PRODUCE[ S(idlnle) -> T(,) S(ide) S(idlnle) ])                                                    A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          
S(grpbycl)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(grpbycl) -> T(E) ])                                                                    A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(grpbycl) -> T(GROUP) T(BY) S(idlste) S(havngcl) ])                                     A(PRODUCE[ S(grpbycl) -> T(E) ])                                                                    A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          
S(whereclwherecl) -> T(E) ])                                                                    A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(wherecl) -> T(WHERE) S(cond) ])                                                        A(PRODUCE[ S(wherecl) -> T(E) ])                                                                    A(PRODUCE[ S(wherecl) -> T(E) ])                                                                    A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          
S(havngclhavngcl) -> T(E) ])                                                                    A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(havngcl) -> T(E) ])                                                                    A(PRODUCE[ S(havngcl) -> T(HAVING) S(cond
S(idlste)                                                                                           A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(idlste) -> S(ide) S(idlnle) ])                                                         A(INVALID)                                                                                          
S(orderclordercl) -> T(E) ])                                                                    A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(ordercl) -> T(ORDER) T(BY) S(idlste
S(condcond') -> T(E) ])                                                                      A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(cond') -> S(cdjoin) S(unitcd) S(cond') ])                                              A(INVALID)                                                                                          A(INVALID)                                                                                          A(PRODUCE[ S(cond') -> T(E) ])                                                                      A(PRODUCE[ S(cond') -> T(E) ])                                                                      A(INVALID)                                                                                          A(PRODUCE[ S(cond') -> S(cdjoin) S(unitcd) S(cond

___________________________________________________________________________

AUGMENTED LL(1) PARSING TABLE -->


S(delst)                                                                                            A(POP)                                                                                              A(PRODUCE[ S(delst) -> T(DELETE) T(FROM) T(ID) S(wherecl
S(insst)                                                                                            A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(insst) -> T(INSERT) T(INTO) T(ID) S(insst
S(unitcd)                                                                                           A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(POP)                                                                                              A(SCAN)                                                                                             A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(unitcd) -> T(NOT) T(() S(unitcd) T()) ])                                               A(PRODUCE[ S(unitcd) -> S(ide) S(compop) S(ide) ])                                                  A(SCAN)                                                                                             
S(idlist)                                                                                           A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(POP)                                                                                              A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(idlist) -> T(ID) S(idlnul) ])                                                          A(SCAN)                                                                                             
S(insst')                                                                                           A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(insst') -> T()) T(VALUES) T(() ])                                                      A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(insst') -> T(,) T(ID) S(insst') T(ID) T(,) ])                                          A(SCAN)                                                                                             A(POP)                                                                                              A(SCAN)                                                                                             
S(ideide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(ide') -> T(.) T(ID) ])                                                                 A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(SCAN)                                                                                             A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(PRODUCE[ S(ide') -> T(E) ])                                                                       A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             
S(s)                                                                                                A(PRODUCE[ S(s) -> T(E) ])                                                                          A(PRODUCE[ S(s) -> S(stmt) T(;) S(s) ])                                                             A(SCAN)                                                                                             A(PRODUCE[ S(s) -> S(stmt) T(;) S(ss) -> S(stmt) T(;) S(s
S(selst)                                                                                            A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(selst) -> T(SELECT) S(idlste) T(FROM) S(idlist) S(wherecl) S(grpbycl) S(ordercl
S(insst1)                                                                                           A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(insst1) -> T(VALUES) T(() S(idlist) T()) ])                                            A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(insst1) -> T(() T(ID) S(insst') T(ID) T()) ])                                          
S(cdjoincdjoin) -> T(OR) ])                                                                    A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(cdjoin) -> T(AND) ])                                                                   A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(POP)                                                                                              A(SCAN)                                                                                             
S(ide)                                                                                              A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(POP)                                                                                              A(POP)                                                                                              A(POP)                                                                                              A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(POP)                                                                                              A(SCAN)                                                                                             A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(POP)                                                                                              A(POP)                                                                                              A(POP)                                                                                              A(POP)                                                                                              A(POP)                                                                                              A(SCAN)                                                                                             A(PRODUCE[ S(ide) -> T(ID) S(ide') ])                                                               A(SCAN)                                                                                             
S(compopcompop) -> T(>=) ])                                                                    A(PRODUCE[ S(compop) -> T(<) ])                                                                     A(PRODUCE[ S(compop) -> T(>) ])                                                                     A(PRODUCE[ S(compop) -> T(=) ])                                                                     A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(compop) -> T(<=) ])                                                                    A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(SCAN)                                                                                             
S(stmt)                                                                                             A(POP)                                                                                              A(PRODUCE[ S(stmt) -> S(delst) ])                                                                   A(SCAN)                                                                                             A(PRODUCE[ S(stmt) -> S(insst) ])                                                                   A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(stmt) -> S(selst
S(idlnul)                                                                                           A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(idlnul) -> T(E) ])                                                                     A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(idlnul) -> T(E) ])                                                                     A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(idlnul) -> T(E) ])                                                                     A(PRODUCE[ S(idlnul) -> T(E) ])                                                                     A(PRODUCE[ S(idlnul) -> T(E) ])                                                                     A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(idlnul) -> T(,) T(ID) S(idlnul) ])                                                     A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             
S(cond)                                                                                             A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(cond) -> S(unitcd) S(cond') ])                                                         A(PRODUCE[ S(cond) -> S(unitcd) S(cond') ])                                                         A(SCAN)                                                                                             
S(idlnleidlnle) -> T(E) ])                                                                     A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(idlnle) -> T(E) ])                                                                     A(PRODUCE[ S(idlnle) -> T(E) ])                                                                     A(SCAN)                                                                                             A(PRODUCE[ S(idlnle) -> T(E) ])                                                                     A(PRODUCE[ S(idlnle) -> T(,) S(ide) S(idlnle) ])                                                    A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             
S(grpbyclgrpbycl) -> T(E) ])                                                                    A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(grpbycl) -> T(GROUP) T(BY) S(idlste) S(havngcl) ])                                     A(PRODUCE[ S(grpbycl) -> T(E) ])                                                                    A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             
S(whereclwherecl) -> T(E) ])                                                                    A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(wherecl) -> T(WHERE) S(cond) ])                                                        A(PRODUCE[ S(wherecl) -> T(E) ])                                                                    A(PRODUCE[ S(wherecl) -> T(E) ])                                                                    A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             
S(havngcl)                                                                                          A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(havngcl) -> T(E) ])                                                                    A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(havngcl) -> T(E) ])                                                                    A(PRODUCE[ S(havngcl) -> T(HAVING) S(cond
S(idlste)                                                                                           A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(POP)                                                                                              A(POP)                                                                                              A(SCAN)                                                                                             A(POP)                                                                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(idlste) -> S(ide) S(idlnle) ])                                                         A(SCAN)                                                                                             
S(orderclordercl) -> T(E) ])                                                                    A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(ordercl) -> T(ORDER) T(BY) S(idlste
S(condcond') -> T(E) ])                                                                      A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(cond') -> S(cdjoin) S(unitcd) S(cond') ])                                              A(SCAN)                                                                                             A(SCAN)                                                                                             A(PRODUCE[ S(cond') -> T(E) ])                                                                      A(PRODUCE[ S(cond') -> T(E) ])                                                                      A(SCAN)                                                                                             A(PRODUCE[ S(cond') -> S(cdjoin) S(unitcd) S(cond

___________________________________________________________________________

READ TOKEN STREAM -->
[{T(SELECT): SELECT}, {T(ID): gtbl}, {T(.): .}, {T(ID): atr}, {T(,): ,}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}]
___________________________________________________________________________

PARSING RESULT: FALSE
PARSING ERROR INFO: Recovered Error

Parsing Stack: S(s), T($)
Token Stream: {T(SELECT): SELECT}, {T(ID): gtbl}, {T(.): .}, {T(ID): atr}, {T(,): ,}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(PRODUCE[ S(s) -> S(stmt) T(;) S(s) ])

Parsing Stack: S(stmt), T(;), S(s), T($)
Token Stream: {T(SELECT): SELECT}, {T(ID): gtbl}, {T(.): .}, {T(ID): atr}, {T(,): ,}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(PRODUCE[ S(stmt) -> S(selst) ])

Parsing Stack: S(selst), T(;), S(s), T($)
Token Stream: {T(SELECT): SELECT}, {T(ID): gtbl}, {T(.): .}, {T(ID): atr}, {T(,): ,}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(PRODUCE[ S(selst) -> T(SELECT) S(idlste) T(FROM) S(idlist) S(wherecl) S(grpbycl) S(ordercl) ])

Parsing Stack: T(SELECT), S(idlste), T(FROM), S(idlist), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(SELECT): SELECT}, {T(ID): gtbl}, {T(.): .}, {T(ID): atr}, {T(,): ,}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(MATCH_TOKEN)

Parsing Stack: S(idlste), T(FROM), S(idlist), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(ID): gtbl}, {T(.): .}, {T(ID): atr}, {T(,): ,}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(PRODUCE[ S(idlste) -> S(ide) S(idlnle) ])

Parsing Stack: S(ide), S(idlnle), T(FROM), S(idlist), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(ID): gtbl}, {T(.): .}, {T(ID): atr}, {T(,): ,}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(PRODUCE[ S(ide) -> T(ID) S(ide') ])

Parsing Stack: T(ID), S(ide'), S(idlnle), T(FROM), S(idlist), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(ID): gtbl}, {T(.): .}, {T(ID): atr}, {T(,): ,}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(MATCH_TOKEN)

Parsing Stack: S(ide'), S(idlnle), T(FROM), S(idlist), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(.): .}, {T(ID): atr}, {T(,): ,}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(PRODUCE[ S(ide') -> T(.) T(ID) ])

Parsing Stack: T(.), T(ID), S(idlnle), T(FROM), S(idlist), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(.): .}, {T(ID): atr}, {T(,): ,}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(MATCH_TOKEN)

Parsing Stack: T(ID), S(idlnle), T(FROM), S(idlist), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(ID): atr}, {T(,): ,}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(MATCH_TOKEN)

Parsing Stack: S(idlnle), T(FROM), S(idlist), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(,): ,}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(PRODUCE[ S(idlnle) -> T(,) S(ide) S(idlnle) ])

Parsing Stack: T(,), S(ide), S(idlnle), T(FROM), S(idlist), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(,): ,}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(MATCH_TOKEN)

Parsing Stack: S(ide), S(idlnle), T(FROM), S(idlist), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(PRODUCE[ S(ide) -> T(ID) S(ide') ])

Parsing Stack: T(ID), S(ide'), S(idlnle), T(FROM), S(idlist), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(MATCH_TOKEN)

Parsing Stack: S(ide'), S(idlnle), T(FROM), S(idlist), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(.): .}, {T(ID): op}, {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(PRODUCE[ S(ide') -> T(.) T(ID) ])

Parsing Stack: T(.), T(ID), S(idlnle), T(FROM), S(idlist), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(.): .}, {T(ID): op}, {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(MATCH_TOKEN)

Parsing Stack: T(ID), S(idlnle), T(FROM), S(idlist), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(ID): op}, {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(MATCH_TOKEN)

Parsing Stack: S(idlnle), T(FROM), S(idlist), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(PRODUCE[ S(idlnle) -> T(E) ])

Parsing Stack: T(FROM), S(idlist), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(FROM): FROM}, {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(MATCH_TOKEN)

Parsing Stack: S(idlist), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(PRODUCE[ S(idlist) -> T(ID) S(idlnul) ])

Parsing Stack: T(ID), S(idlnul), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(ID): gtbl}, {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(MATCH_TOKEN)

Parsing Stack: S(idlnul), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(PRODUCE[ S(idlnul) -> T(,) T(ID) S(idlnul) ])

Parsing Stack: T(,), T(ID), S(idlnul), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(,): ,}, {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(MATCH_TOKEN)

Parsing Stack: T(ID), S(idlnul), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(ID): btbl}, {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(MATCH_TOKEN)

Parsing Stack: S(idlnul), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(HAVING): HAVING}, {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(SCAN)

Parsing Stack: S(idlnul), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(ID): btbl}, {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(SCAN)

Parsing Stack: S(idlnul), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(.): .}, {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(SCAN)

Parsing Stack: S(idlnul), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(ID): op}, {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(SCAN)

Parsing Stack: S(idlnul), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(>): >}, {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(SCAN)

Parsing Stack: S(idlnul), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(ID): opwin}, {T(;): ;}, {T($): $}
Action: A(SCAN)

Parsing Stack: S(idlnul), S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(;): ;}, {T($): $}
Action: A(PRODUCE[ S(idlnul) -> T(E) ])

Parsing Stack: S(wherecl), S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(;): ;}, {T($): $}
Action: A(PRODUCE[ S(wherecl) -> T(E) ])

Parsing Stack: S(grpbycl), S(ordercl), T(;), S(s), T($)
Token Stream: {T(;): ;}, {T($): $}
Action: A(PRODUCE[ S(grpbycl) -> T(E) ])

Parsing Stack: S(ordercl), T(;), S(s), T($)
Token Stream: {T(;): ;}, {T($): $}
Action: A(PRODUCE[ S(ordercl) -> T(E) ])

Parsing Stack: T(;), S(s), T($)
Token Stream: {T(;): ;}, {T($): $}
Action: A(MATCH_TOKEN)

Parsing Stack: S(s), T($)
Token Stream: {T($): $}
Action: A(PRODUCE[ S(s) -> T(E) ])

Parsing Stack: T($)
Token Stream: {T($): $}
Action: A(MATCH_TOKEN)


___________________________________________________________________________

